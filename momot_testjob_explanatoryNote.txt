Момот Виталий.
Пояснительная записка к тестовому заданию.

Исходные код: https://github.com/mommvittl/dunn

Работающий пример: http://snake.dp.ua/

Файл sql: create_db_snake.sql

Схема базы данных: bd_snake.png 

Что реализовано: 
    1.Задание построено на типовом ЧПУ.Включены все необходимые папки,
    позволяющие расширить проект до необходимого функционала.

    2.ЧПУ работает стандартным образом - snake.dp.ua/controller/action/parameter.
    Для контроллера employes, согласно ТЗ, адрес формируется по след.правилам:
    snake.dp.ua/employes - вывод всех сотрудников, станица по умолчанию - 1
    snake.dp.ua/employes/5 - вывод всех сотрудников, станица по умолчанию - 5
    snake.dp.ua/employes/departamentName - вывод  сотрудников отдела departamentName,  станица по умолчанию - 1
    snake.dp.ua/employes/departamentName/4 - вывод  сотрудников отдела departamentName,  станица по умолчанию - 4

    3.Обновление данных в таблице вывода сотрудников осуществляется 
    без перезагрузки страницы AJAX запросами.
    
    4.Реализована страница ошибок 404.
    
    5.Реализованы две страницы ( доступны через меню или через URL ).

    6.Работа с версткой выполнялясь на минимально необходимом  для показа проекта уровне.
    
    7.Работа с AJAX запросом и весь необходимый минимальный функционал
    выполнен только с использованием стандартного JS без применения JQuery.
    Ф-ии обмена данными AJAX и ф-ии вывода реализованы  в виде мини библиотечных
    функций для реализации возможности их использования во всем приложении без необходимости
     дублирования и изменения.

     8.Сотрудники описаны двумя классами staffHourModel ( почасовка ) и staffMonthModel ( ставка ).
     Они наследуются от базового класса staffModel , который в свою очередь является ассоциацией
     себя с классами peopleModel и departamentModel для возможности отдельного использования 
     этих классов, их наследования и изменения.  

     9.Общее время потраченое на работу -  18 часов.